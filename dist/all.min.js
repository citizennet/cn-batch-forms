"use strict";function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}!function(){angular.module("cn.batch-forms",["schemaForm","cn.flex-form","cn.util","ui.router"])}(),function(){function e(e,t,n){function s(){console.log("vm.parent:",o.parent),o.results||n(o.cancel),o.headerConfig={title:{main:"Batch Results"},actionConfig:{actions:[{text:"Cool"}]},noData:!0}}function a(){e.go("^")}var o=this;o.parent=t,o.results=o.parent.results,o.originals=o.parent.models,o.config=o.parent.resultsConfig,o.displayName=o.config&&o.config.displayName||"name",o.activate=s,o.cancel=a,o.done=a,o.activate()}angular.module("cn.batch-forms").controller("BatchResults",e),e.$inject=["$state","parent","$timeout"]}(),function(){function e(e,t){e.registerField({condition:function(e){return e.type===n},handler:function(e){},type:n,templateUrl:s}),t.addMapping("results",{controller:"BatchResults",controllerAs:"vm",templateUrl:"cn-batch-forms/batch-results.html"})}function t(e){e.put(s,'        <div class="checkbox cn-dirty-check {{form.htmlClass}}">          <input type="checkbox"                 ng-model="$$value$$"                 ng-model-options="form.ngModelOptions"                 sf-changed="form"                 ng-disabled="form.readonly"                 name="{{form.key.slice(-1)[0]}}"/>        </div>')}angular.module("cn.batch-forms").config(e).run(t);var n="cn-dirty-check",s="cn-batch-forms/cn-dirty-check.html";e.$inject=["cnFlexFormServiceProvider","cnFlexFormModalLoaderServiceProvider"],t.$inject=["$templateCache"]}(),function(){function e(e,t,n,s,a,o,i){function r(e,t,n){if(!n.length)return e;var s=l(e,t,n);return s}function l(e,t,n){return Object.create({constructor:c,addMeta:j,addToSchema:b,clearDefaults:w,clearSchemaDefault:V,closeModal:R,createDirtyCheck:y,createBatchField:v,getChangedModels:M,getEditModeLegends:P,getModelValues:C,getSchemaDefault:g,getTitleMap:m,onFieldScope:d,processCondition:p,processForm:h,processField:f,processItems:u,processDate:F,processDefault:S,processNumber:x,processSelect:$,processToggle:E,setValue:k,showResults:D}).constructor(e,t,n)}function c(e,t,n){if(console.log("BatchForms:",e,t,n),this.instance=q,i.resolveMapping("results",this.instance,this),q++,this.schema=e,this.model=t,this.models=n,this.editModes={},this.fieldRegister={},this.clearDefaults(),e.forms)for(var a=e.forms.length-1;a>-1;)this.processForm(e.forms[a]),e.forms[a].form.length||e.forms.splice(a,1),--a;else this.processForm(e.form);return this.addMeta(),s.$on("schemaFormPropagateScope",this.onFieldScope.bind(this)),console.log("BatchDone:",e,t,n),this}function d(e,t){var n=t.form._key;n?this.fieldRegister[n].ngModel=t.ngModel:"__batchConfig"===t.form.key[0]&&(t.ngModel.$pristine=!1)}function h(e){this.processItems(e,"form")}function u(e){for(var t=arguments.length<=1||void 0===arguments[1]?"items":arguments[1],n=e[t].length-1;n>-1;){var s=e[t][n],a=this.processField(s);if(s.batchConfig&&a){s.htmlClass=(s.htmlClass||"")+" cn-batch-field";var o=this.createBatchField(s),i=this.createDirtyCheck(s);e[t][n]={type:"section",htmlClass:"cn-batch-wrapper",items:[s,i,o],condition:this.processCondition(s.condition)},delete s.condition,this.fieldRegister[s.key]={field:s}}a||e[t].splice(n,1),--n}}function p(e){return e&&e.replace(/\b(model)\.(\S*)\b/g,'($1.$2 === undefined ? $1.__ogValues["$2"] : $1.$2)')}function f(n){if(n.key){if(!n.batchConfig)return!1;n._key=n.key,n.schema=n.schema||e.getSchema(n.key,this.schema.schema.properties),n.type=n.type||n.schema.type;var s=t.getFieldType(n),a=A[s];if(!a)return!1;if(_.isObject(n.batchConfig)||(n.batchConfig={}),n.batchConfig.ogValues=this.getModelValues(n),_.allEqual(n.batchConfig.ogValues)){var o='__ogValues["'+n.key+'"]',i=_.first(n.batchConfig.ogValues);e.parseExpression(o,this.model).set(i)}a.bind(this)(n)}else if(n.items&&(this.processItems(n),!n.items.length))return!1;return!0}function m(e){var t=this;return e=e||["replace"],e.map(function(e){return t.editModes[e]=!0,{name:_.capitalize(e),value:e}})}function g(e){return e||"replace"}function v(e){var t='__batchConfig["'+e.key+'"]',n={key:t,type:"radiobuttons",titleMap:this.getTitleMap(e.batchConfig.editModes),htmlClass:"cn-batch-options",btnClass:"btn-sm cn-no-dirty-check"};return 1===n.titleMap.length&&(n.condition="false"),this.addToSchema(t,{type:"string",title:"Edit Mode","default":this.getSchemaDefault(e.batchConfig["default"])}),e.batchConfig.onSelect&&(n.watch={resolution:function(t,n){console.log("field.batchConfig.onSelect, val, prev:",e.batchConfig.onSelect,t,n),e.batchConfig.onSelect[t](n)}}),n}function y(t){var s=this,a=n.parse(t.key),o='__dirtyCheck["'+a[0]+'"]',i=a.length>1,r="";(t.notitle||!t.schema.title)&&(r+=" notitle");var l={key:o,htmlClass:r,type:"cn-dirty-check"};return this.addToSchema(o,{type:"boolean",notitle:!0}),console.log("dirtyCheck:",t.key,l.readonly),i||(t.watch?_.isArray(t.watch)||(t.watch=[t.watch]):t.watch=[],t.watch.push({resolution:function(n,a){if(!angular.equals(n,a)){var o=s.fieldRegister[t.key];o?o.ngModel&&o.ngModel.$dirty||o.initiated?e.parseExpression(l.key,s.model).set(!0):(console.log("initiated:",o),o.initiated=!0):console.log("noregister:",o)}}})),l}function b(e,t){var s=n.parse(e),a=this.schema.schema;s.forEach(function(e,n){n===s.length-1?(a.properties||(a.properties={}),a.properties[e]=t):""===e?(a.items||(a.items={type:"object"}),a=a.items):(a.properties||(a.properties={}),a.properties[e]||(a.properties[e]={type:"object"}),a=a.properties[e])})}function C(t){return this.models.map(function(n){return e.parseExpression(t.key,n).get()})}function M(){var t=this,n=[];return _.each(this.fieldRegister,function(s,a){var o=e.parseExpression('__dirtyCheck["'+a+'"]',t.model).get();if(console.log("key, dirty:",a,o,s),o){var i=e.parseExpression('__batchConfig["'+a+'"]',t.model).get();t.models.forEach(function(s,o){n[o]||(n[o]={});var r=e.parseExpression(a,t.model).get(),l=e.parseExpression(a,n[o]),c=e.parseExpression(a,t.models[o]);t.setValue(r,l,c,i)})}}),n}function k(e,t,n,s){if("replace"===s)t.set(e);else if("append"===s){var a=n.get();_.isArray(a)?t.set(a.concat(e)):_.isString(a)&&t.set(a+" "+e.trim())}else if("prepend"===s){var a=n.get();_.isArray(a)?t.set(e.concat(a)):_.isString(a)&&t.set(e.trim()+" "+a)}else"increase"===s?t.set(n.get()+e):"decrease"===s&&t.set(n.get()-e)}function S(e){var t=e.batchConfig;t.editModes=t.editModes||["replace","prepend","append"],t["default"]=t["default"]||"append",t.onSelect={replace:function(){_.allEqual(t.ogValues)?e.placeholder=_.first(t.ogValues):e.placeholder="—"},append:function(){e.placeholder=""},prepend:function(){e.placeholder=""}}}function x(e){var t=e.batchConfig;t.editModes=t.editModes||["replace","decrease","increase"],_.allEqual(t.ogValues)?e.placeholder=_.first(t.ogValues):e.placeholder="—",console.log("number placeholder:",e.placeholder)}function $(t){var n=this,s=t.schema.type,a=t.batchConfig;if("array"===s)a.editModes=a.editModes||["replace","append"],a["default"]=a["default"]||"append",a.onSelect={replace:function(s){"append"!==s&&e.parseExpression(t.key,n.model).set([])},append:function(s){"replace"!==s&&e.parseExpression(t.key,n.model).set([])},remove:function(){var s=_.chain(t.batchConfig.ogValues).flatten().uniq().value();e.parseExpression(t.key,n.model).set(s)}};else{var o=_.first(a.ogValues);if(o&&_.allEqual(a.ogValues)){var i=t.titleMap||t.titleMapResolve&&this.schema.data[t.titleMapResolve];console.log("titleMap, first:",i,o),i&&(o=_.find(i,_defineProperty({},t.valueProperty||"value",o))),t.placeholder=o&&o[t.displayProperty||"name"]}t.placeholder||(t.placeholder="—")}}function F(e){var t=e.batchConfig;_.allEqual(t.ogValues)?e.placeholder=moment(_.first(t.ogValues)).format("M/DD/YYYY h:mm a"):e.placeholder="—"}function E(e){var t=e.batchConfig;_.allEqual(t.ogValues)&&(_.first(t.ogValues)==e.onValue?e.undefinedClass="semi-transparent":e.undefinedClass="disabled semi-transparent")}function w(){this.schema.schema.required=[],_.each(this.schema.schema.properties,this.clearSchemaDefault.bind(this)),this.schema.schema.properties.__batchConfig={type:"object",properties:{}},this.schema.schema.properties.__dirtyCheck={type:"object",properties:{}}}function V(e){e["default"]=void 0,"object"===e.type&&e.properties?_.each(e.properties,this.clearSchemaDefault.bind(this)):"array"===e.type&&e.items&&this.clearSchemaDefault(e.items)}function D(e,t){console.log("showResults:",e,this),this.results=e,this.resultsConfig=t,a.go(".modal",{modal:"results",modalId:this.instance}),this.onCloseModal=s.$on("$stateChangeStart",this.closeModal.bind(this))}function R(e,t,n){console.log("closeModal:",e,t,n),console.log("this.resultsConfig:",this.resultsConfig),this.onCloseModal();var s=this.resultsConfig;s&&s.returnState&&o(function(){return a.go(s.returnState.name,s.returnState.params)}),this.results=[],this.resultsConfig=null}function j(){this.schema.meta='\n          <div class="well">\n            <h5>Edit Modes</h5>\n            <p>Some types of fields allow you to apply batch changes in\n            different ways:</p>\n            <dl>\n              <dt>Replace:</dt>\n              <dd>Replace all the original values\n              with the new value. <em>(If you don\'t see an <b>Edit Mode</b> option\n              for a field, this will be the default)</em></dd>\n            </dl>\n            '+this.getEditModeLegends()+"\n          </div>"}function P(){var e="";return this.editModes.prepend&&(e+="\n            <dl>\n              <dt>Prepend:</dt>\n              <dd>Add the new value to the start of the original\n              values for each item.</dd>\n            </dl>"),this.editModes.append&&(e+="\n            <dl>\n              <dt>Append:</dt>\n              <dd>Affix the new value at the end of the original\n              values for each item.</dd>\n            </dl>"),this.editModes.decrease&&(e+="\n            <dl>\n              <dt>Decrease:</dt>\n              <dd>Subtract the given value from the original\n              values for each item.</dd>\n            </dl>"),this.editModes.increase&&(e+="\n            <dl>\n              <dt>Increase:</dt>\n              <dd>Add the given value to the original\n              values for each item.</dd>\n            </dl>"),e}var q=0,A={string:S,number:x,"cn-autocomplete":$,"cn-currency":x,"cn-datetimepicker":F,"cn-toggle":E};return{augmentSchema:r}}angular.module("cn.batch-forms").factory("cnBatchForms",e),e.$inject=["cnFlexFormService","cnFlexFormTypes","sfPath","$rootScope","$state","$timeout","cnFlexFormModalLoaderService"]}(),angular.module("cn.batch-forms").run(["$templateCache",function(e){e.put("cn-batch-forms/batch-results.html",'<div class="cn-modal">\n  <div class="modal-header clearfix">\n    <cn-flex-form-header\n      ff-header-config="vm.headerConfig"\n      ff-submit="vm.done()">\n    </cn-flex-form-header>\n  </div>\n  <div class="modal-body cn-list"\n       cn-responsive-height="80"\n       cn-responsive-break="sm"\n       cn-set-max-height>\n    <ul class="list-group gutterless">\n      <li ng-repeat="result in vm.results"\n          class="list-group-item"\n          ng-class="{\n            \'text-danger\': result.status != 200,\n            \'text-primary\': result.status == 200\n          }">\n        <div class="row">\n          <div class="col-sm-1 text-center">\n            <i class="fa fa-{{result.status == 200 ? \'check\' : \'times\'}}"></i>\n          </div>\n          <div class="col-sm-11"\n               ng-show="result.status == 200">\n            {{result.body[vm.displayName]}} ({{result.body.id}}):\n            updated successfully\n          </div>\n          <div class="col-sm-11"\n               ng-show="result.status != 200">\n            {{vm.originals[$index][vm.displayName]}} ({{vm.originals[$index].id}}):\n            {{result.body.message}}\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n')}]);
//# sourceMappingURL=all.min.js.map
